for i# = 10 to 124 step (id) * id - not 15 * sdkf (-(-(dsf))) * (8*f$(k, k, L) - ((6)) + 15)
    print ""
next

while (id) * id - not 15 * sdkf (-(-(dsf))) * (8*f$(k, k, L) - ((6)) + 15)
    for i# = 10 to 124 step (id) * id - not 15 * sdkf (-(-(dsf))) * (8*f$(k, k, L) - ((6)) + 15)
        print ""
    next proc
    while -(-(-(1)))
        print ""
    wend
wend


function name (a$, b%, c&, d#, e!)
    dim y as long
    dim x(expresion, expresion, expresion) as string
    dim a, b, c(expresion) as single
    dim shared global, g(expresion, expresion) as double

    a& = 1000000
    b! = 1.1
    c = 2.0
    d% = 1000
    e# = 10.000000042

    const inf& = 10000000

    input nombre$
    input nombre$, edad
    print nombre$
    print edad; nombre$; 2017

    if expresion then
        ' comandos
    elseif expresion then
        ' comandos
    else
        ' comandos
    end if

    while expression
        ' comandos
    wend

    do
        ' comandos
    loop while expression

    do
        ' comandos
    loop until expression

    for i = 1 to 10
        ' comandos
    next

    for i = expresion to expresion step expresion
        for j = expresion to expresion
            print i + j
        next
    next
end function

no_ahora_por_favor = f(5)

function f (x)
    x = x + 5
end function

